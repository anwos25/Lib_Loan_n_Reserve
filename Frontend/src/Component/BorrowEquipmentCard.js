import React from "react";
import { View, Text, StyleSheet, TouchableOpacity } from "react-native";
import moment from "moment"; // ‡πÉ‡∏ä‡πâ moment.js ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà

const BorrowEquipmentCard = ({ equipmentData, onBorrowPress }) => {
  return (
    <View style={styles.card}>
      <Text style={styles.cardTitle}>{equipmentData.name}</Text>
      <Text style={styles.description}>{equipmentData.description}</Text>

      <View style={styles.infoContainer}>
        <View style={styles.infoItem}>
          <Text style={styles.infoLabel}>‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏´‡πâ‡∏¢‡∏∑‡∏°:</Text>
          <Text style={styles.infoValue}>
            {equipmentData.available} / {equipmentData.total_quantity}
          </Text>
        </View>
        <View style={styles.infoItem}>
          <Text style={styles.infoLabel}>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°:</Text>
          <Text style={styles.infoValue}>
            {moment(equipmentData.created_at).format("DD/MM/YYYY")}
          </Text>
        </View>
      </View>

      <TouchableOpacity style={styles.borrowButton} onPress={onBorrowPress}>
        <Text style={styles.borrowButtonText}>‡∏¢‡∏∑‡∏°</Text>
      </TouchableOpacity>
    </View>
  );
};

const handleBorrow = async () => {
  try {
    const response = await axios.post(`${API_URL}/loans`, {
      user_id: 1, // üîÅ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô user ‡∏à‡∏£‡∏¥‡∏á ‡πÜ ‡∏à‡∏≤‡∏Å token ‡∏´‡∏£‡∏∑‡∏≠ state
      item_id: equipmentData.id,
      quantity: 1, // üîÅ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏î‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á
      borrow_date: new Date().toISOString().split('T')[0], // ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
      return_date: new Date(Date.now() + 15 * 86400000).toISOString().split('T')[0], // ‡∏Ñ‡∏∑‡∏ô‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 3 ‡∏ß‡∏±‡∏ô
    });

    Alert.alert("‡∏¢‡∏∑‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", response.data.message);
  } catch (error) {
    console.error("‡∏¢‡∏∑‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", error.response?.data || error.message);
    Alert.alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", error.response?.data?.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏∑‡∏°‡πÑ‡∏î‡πâ");
  }
};

const styles = StyleSheet.create({
  card: {
    backgroundColor: "#fff",
    borderRadius: 10,
    padding: 20,
    marginVertical: 8,
    marginHorizontal: 16,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 2,
    elevation: 2,
  },
  cardTitle: {
    fontSize: 18,
    fontWeight: "bold",
    marginBottom: 10,
    color: "#333",
  },
  description: {
    fontSize: 14,
    color: "#666",
    marginBottom: 10,
  },
  infoContainer: {
    flexDirection: "row",
    justifyContent: "space-between",
  },
  infoItem: {
    flex: 1,
  },
  infoLabel: {
    fontWeight: "bold",
    color: "#333",
  },
  infoValue: {
    color: "#666",
  },
  borrowButton: {
    backgroundColor: "#122620",
    paddingVertical: 10,
    paddingHorizontal: 20,
    borderRadius: 25,
    position: "absolute", // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô position ‡πÄ‡∏õ‡πá‡∏ô absolute
    bottom: 15, // ‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
    right: 15, // ‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡∏≠‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤
  },
  borrowButtonText: {
    color: "#fff",
    fontSize: 16,
    fontWeight: "bold",
  },
});

export default BorrowEquipmentCard;
